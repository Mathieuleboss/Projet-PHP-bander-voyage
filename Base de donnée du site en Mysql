-- Créer la base de données

CREATE DATABASE TravelDB; 
USE TravelDB;

-- Table des utilisateurs 

CREATE TABLE Users ( 
user_id INT AUTO_INCREMENT PRIMARY KEY, 
first_name VARCHAR(100) NOT NULL,
last_name VARCHAR(100) NOT NULL,
email VARCHAR(150) NOT NULL UNIQUE, 
password_hash VARCHAR(255) NOT NULL,
phone_number VARCHAR(15) NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
balance DOUBLE DEFAULT 0.00,
INDEX (email) );

-- Table des destinations 

CREATE TABLE Destinations ( 
destination_id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
country VARCHAR(100) NOT NULL,
description TEXT,
image_url VARCHAR(255) NULL,
INDEX (country) );

-- Table des hôtels 

CREATE TABLE Hotels(
hotel_id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
destination_id INT,
address VARCHAR(255) NOT NULL,
stars INT CHECK (stars BETWEEN 1 AND 5),
description TEXT,
price_per_night DECIMAL(10, 2) NOT NULL,
image_url VARCHAR(255) NULL,
FOREIGN KEY (destination_id) REFERENCES Destinations(destination_id),
INDEX (price_per_night) );

-- Table des vols 

CREATE TABLE Flights (
flight_id INT AUTO_INCREMENT PRIMARY KEY,
airline VARCHAR(100) NOT NULL,
origin VARCHAR(100) NOT NULL,
destination_id INT,
-- Clé étrangère vers Destinations 
departure_time DATETIME NOT NULL,
arrival_time DATETIME NOT NULL,
price DECIMAL(10, 2) NOT NULL,
duration INT NOT NULL,
image_url VARCHAR(255) NULL,
FOREIGN KEY (destination_id) REFERENCES Destinations(destination_id),
INDEX (departure_time) ); 

-- Table des réservations 

CREATE TABLE Reservations (
reservation_id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT, hotel_id INT,
flight_id INT,
reservation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
total_price DECIMAL(10, 2) NOT NULL,
status ENUM('Pending', 'Confirmed', 'Cancelled') DEFAULT 'Pending', 
FOREIGN KEY (user_id) REFERENCES Users(user_id),
FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),
FOREIGN KEY (flight_id) REFERENCES Flights(flight_id), 
INDEX (reservation_date) );

-- Table des avis d'hôtels

CREATE TABLE HotelReviews (
review_id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT, hotel_id INT,
rating INT CHECK (rating BETWEEN 1 AND 5), 
review_text TEXT, 
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES Users(user_id),
FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),
INDEX (created_at) ); 

-- Table des avis de vols 

CREATE TABLE FlightReviews (
review_id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT, flight_id INT,
rating INT CHECK (rating BETWEEN 1 AND 5),
review_text TEXT,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES Users(user_id),
FOREIGN KEY (flight_id) REFERENCES Flights(flight_id),
INDEX (created_at) );

-- Table des paiements

CREATE TABLE Payments (
payment_id INT AUTO_INCREMENT PRIMARY KEY,
reservation_id INT,
payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
amount DECIMAL(10, 2) NOT NULL,
payment_method ENUM('Credit Card', 'Paypal', 'Bank Transfer') NOT NULL,
payment_status ENUM('Pending', 'Completed', 'Failed') DEFAULT 'Pending',
reservation_hotel INT,
-- Référence à l'ID de l'hôtel dans la réservation 
reservation_flight INT,
-- Référence au vol dans la réservation 
FOREIGN KEY (reservation_id) REFERENCES Reservations(reservation_id) );

-- Table des détails de paiement

CREATE TABLE PaymentDetails (
payment_detail_id INT AUTO_INCREMENT PRIMARY KEY,
payment_id INT, card_number VARCHAR(16) NULL,
card_expiry DATE NULL,
card_cvc VARCHAR(4) NULL,
paypal_email VARCHAR(100) NULL,
bank_account_number VARCHAR(20) NULL,
FOREIGN KEY (payment_id) REFERENCES Payments(payment_id) );
