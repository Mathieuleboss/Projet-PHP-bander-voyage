DELIMITER $$

CREATE PROCEDURE InsertFlights()
BEGIN
    -- Variables pour les dates et autres paramètres
    DECLARE dateV DATE;
    DECLARE departure_time TIME;
    DECLARE duration INT;
    DECLARE departure_datetime DATETIME;
    DECLARE arrival_datetime DATETIME;
    DECLARE destination VARCHAR(50);
    DECLARE return_duration INT;
    DECLARE done INT DEFAULT 0;
    DECLARE return_departure_datetime DATETIME;
    DECLARE return_arrival_datetime DATETIME;

    -- Curseur pour les destinations
    DECLARE destinations_cursor CURSOR FOR
        SELECT 'Paris' UNION ALL SELECT 'New York' UNION ALL SELECT 'Tokyo' UNION ALL SELECT 'Yaoundé';

    -- Curseur pour les horaires de départ
    DECLARE time_cursor CURSOR FOR
        SELECT '06:00:00' UNION ALL SELECT '10:00:00' UNION ALL SELECT '12:00:00' UNION ALL SELECT '18:00:00' UNION ALL SELECT '22:00:00';

    -- Handler pour fermer le curseur à la fin
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    -- Initialiser la date de départ
    SET dateV = '2025-06-01';

    -- Boucle pour chaque jour entre le 1er juin et le 31 août
    WHILE dateV <= '2025-08-31' DO
        -- Réinitialiser done avant d'ouvrir le curseur pour les destinations
        SET done = 0;
        
        -- Ouvrir le curseur pour les destinations
        OPEN destinations_cursor;
        
        -- Boucle pour chaque destination
        FETCH NEXT FROM destinations_cursor INTO destination;
        WHILE done = 0 DO
            -- Déterminer la durée du vol en fonction de la destination
            SET duration = CASE
                WHEN destination = 'Paris' THEN 8
                WHEN destination = 'New York' THEN 8
                WHEN destination = 'Tokyo' THEN 12
                WHEN destination = 'Yaoundé' THEN 6
                ELSE 8
            END;

            -- Réinitialiser done pour le curseur des horaires de départ
            SET done = 0;
            -- Ouvrir le curseur pour les horaires de départ
            OPEN time_cursor;

            -- Boucle pour chaque horaire de départ
            FETCH NEXT FROM time_cursor INTO departure_time;
            WHILE done = 0 DO
                -- Calculer l'heure de départ et l'heure d'arrivée
                SET departure_datetime = CONCAT(dateV, ' ', departure_time);
                SET arrival_datetime = DATE_ADD(departure_datetime, INTERVAL duration HOUR);

                -- Insérer le vol aller
                INSERT INTO Flights (airline, origin, destination_id, departure_time, arrival_time, price, duration, image_url)
                SELECT 'Air France', 'Paris', destination_id, departure_datetime, arrival_datetime, 500, duration, 'airline_image_url.jpg'
                FROM Destinations
                WHERE name = destination;

                -- Insérer le vol retour
                SET return_duration = CASE
                    WHEN destination = 'Paris' THEN 8
                    WHEN destination = 'New York' THEN 8
                    WHEN destination = 'Tokyo' THEN 12
                    WHEN destination = 'Yaoundé' THEN 6
                    ELSE 8
                END;

                -- Calculer l'heure de départ et l'heure d'arrivée du vol retour
                SET return_departure_datetime = CONCAT(dateV, ' ', departure_time);
                SET return_arrival_datetime = DATE_ADD(return_departure_datetime, INTERVAL return_duration HOUR);
                
                INSERT INTO Flights (airline, origin, destination_id, departure_time, arrival_time, price, duration, image_url)
                SELECT 'Air France', destination, destination_id, return_departure_datetime, return_arrival_datetime, 500, return_duration, 'airline_image_url.jpg'
                FROM Destinations
                WHERE name = 'Paris';

                -- Passer au prochain horaire
                FETCH NEXT FROM time_cursor INTO departure_time;
            END WHILE;

            -- Fermer le curseur pour les horaires de départ
            CLOSE time_cursor;

            -- Passer à la destination suivante
            FETCH NEXT FROM destinations_cursor INTO destination;
        END WHILE;

        -- Fermer le curseur pour les destinations
        CLOSE destinations_cursor;

        -- Passer au jour suivant
        SET dateV = DATE_ADD(dateV, INTERVAL 1 DAY);
    END WHILE;

END$$

DELIMITER ;

CALL InsertFlights();
